---
# --------------------------------

- name: "Install packages"
  ansible.builtin.apt:
    name: "{{ nginx_packages }}"
    state: present
  become: true
  tags: ["ct-nginx"]

- name: "Add runtime account to its group"
  ansible.builtin.user:
    append: true
    groups: "{{ nginx_group }}"
    name: "{{ nginx_runtime }}"
  become: true
  tags: ["ct-nginx"]

- name: "Create base directories"
  ansible.builtin.file:
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
    owner: "{{ item.owner }}"
    path: "{{ item.path }}"
    state: directory
  loop: "{{ nginx_dirs }}"
  become: true
  tags: ["ct-nginx"]

- name: "Create docroot"
  ansible.builtin.file:
    mode: "0755"
    path: "{{ item.docroot }}"
    state: directory
  loop: "{{ nginx_vhosts }}"
  when: item.docroot is defined
  become: true
  tags: ["ct-nginx"]

- name: "Create CSS directory"
  ansible.builtin.file:
    mode: "0755"
    path: "{{ item.docroot }}/css"
    state: directory
  loop: "{{ nginx_vhosts }}"
  when: false  # item.docroot is defined DEPRECATED
  become: true
  tags: ["ct-nginx"]

- name: "Add landing page"
  ansible.builtin.template:
    src: index.html.j2
    dest: "{{ item.docroot }}/index.html"
    owner: "{{ nginx_runtime }}"
    group: "{{ nginx_group }}"
    mode: "0644"
  loop: "{{ nginx_vhosts }}"
  when:
  - item.docroot is defined
  - (item.add_landing_page | default(false))
  become: true
  tags: ["ct-nginx"]

- name: "Copy CSS"
  ansible.builtin.copy:
    src: basic.css
    dest: "{{ item.docroot }}/css"
    owner: "{{ nginx_runtime }}"
    group: "{{ nginx_group }}"
    mode: "0644"
  loop: "{{ nginx_vhosts }}"
  when: false  # item.docroot is defined DEPRECATED
  become: true
  tags: ["ct-nginx"]

- name: "Copy favicon"
  ansible.builtin.copy:
    dest: "{{ item.docroot }}"
    group: "{{ nginx_group }}"
    mode: "0644"
    owner: "{{ nginx_runtime }}"
    src: favicon.ico
  loop: "{{ nginx_vhosts }}"
  when: false  # item.docroot is defined DEPRECATED
  become: true
  tags: ["ct-nginx"]

- name: "Create log dirs"
  ansible.builtin.file:
    group: "{{ nginx_group }}"
    mode: "0755"
    owner: "{{ nginx_runtime }}"
    path: "{{ nginx_log_dir }}/{{ item.shortname }}"
    state: directory
  loop: "{{ nginx_vhosts }}"
  become: true
  tags: ["ct-nginx"]

- name: "Render virtual host config"
  ansible.builtin.template:
    src: vhost.conf.j2
    dest: /etc/nginx/sites-available/{{ item.shortname }}.conf
    mode: "0644"
  loop: "{{ nginx_vhosts }}"
  become: true
  notify: HandlerRestartNginx
  tags: ["ct-nginx"]

- name: "Render HTTP redirect config"
  ansible.builtin.template:
    src: redirect.conf.j2
    dest: /etc/nginx/sites-available/redirect-{{ item.shortname }}.conf
    mode: "0644"
  when: item.redirect is true
  loop: "{{ nginx_vhosts }}"
  become: true
  notify: HandlerRestartNginx
  tags: ["ct-nginx"]

- name: "Enable vhosts"
  ansible.builtin.file:
    dest: /etc/nginx/sites-enabled/{{ item.shortname }}.conf
    src: ../sites-available/{{ item.shortname }}.conf
    state: link
  loop: "{{ nginx_vhosts }}"
  when: (item.enabled | default(false))
  notify: HandlerRestartNginx
  become: true
  tags: ["ct-nginx"]

- name: "Enable vhost redirects"
  ansible.builtin.file:
    dest: /etc/nginx/sites-enabled/redirect-{{ item.shortname }}.conf
    src: ../sites-available/redirect-{{ item.shortname }}.conf
    state: link
  loop: "{{ nginx_vhosts }}"
  when: item.redirect is true
  become: true
  tags: ["ct-nginx"]

- name: "Move original config aside"
  ansible.builtin.command: /bin/mv {{ nginx_etc_dir }}/nginx.conf {{ nginx_etc_dir }}/nginx.conf.orig
  args:
    creates: "{{ nginx_etc_dir }}/nginx.conf.orig"
  become: true
  tags: ["ct-nginx"]

- name: "Render main config file"
  ansible.builtin.template:
    dest: "{{ nginx_etc_dir }}/nginx.conf"
    group: root
    mode: "0644"
    owner: root
    src: templates/nginx.conf.j2
  notify: HandlerRestartNginx
  become: true
  tags: ["ct-nginx"]

- name: "Manage the service"
  ansible.builtin.systemd:
    enabled: "{{ nginx_svc_enabled }}"
    name: "{{ nginx_svc_name }}"
    state: "{{ nginx_svc_state }}"
  become: true
  tags: ["ct-nginx"]

# --------------------------------
...
